document.addEventListener("DOMContentLoaded", function() {
	
	function СopyToClipboard(text) {
		const input = document.createElement("textarea");
		input.value = text;

		document.body.appendChild(input);

		input.select();
		document.execCommand("copy");

		document.body.removeChild(input);
    }

	// Venetian blinds
	document.getElementById("venetianBlinds").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Venetian blinds","fragShader":"precision highp float;uniform sampler2D tDiffuse;varying vec2 vUvScaled;uniform float width;uniform float angle;uniform float margin;void main(){float p_width=width;vec4 texel=texture2D(tDiffuse,vUvScaled);float s=vUvScaled.x+vUvScaled.y;float angle_rad=radians(angle)*180.0;float cosAngle=cos(angle_rad);float sinAngle=sin(angle_rad);vec2 p=vUvScaled-vec2(0.5);vec2 rotatedP=vec2(p.x*cosAngle-p.y*sinAngle,p.x*sinAngle+p.y*cosAngle);float sRotated=rotatedP.x+rotatedP.y;float blinds=mod(sRotated,p_width);float p_margin=margin*p_width/float(2);float alpha=step(p_margin,blinds)*step(blinds,p_width-p_margin);gl_FragColor=texel*alpha;}"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0.01,"max":1},"properties":{"name":"width"},"keyframes":[{"value":0.02}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"angle"},"keyframes":[{"value":0}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"margin"},"keyframes":[{"value":0.5}]}]}],"baseType":"effect"}]');
	});

	// Turbulent displace
	document.getElementById("turbulentDisplace").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Turbulent displace ","fragShader":"precision highp float;uniform sampler2D tDiffuse;varying vec2 vUv;uniform float strength;uniform float time;uniform float scale;void main(){float displacementX=cos(vUv.y*strength+time)*(strength*0.005*scale);float displacementY=sin(vUv.x*strength+time)*(strength*0.005*scale);vec2 displacement=vec2(displacementX,displacementY);vec2 distortedUV=vUv+displacement;vec4 texel=texture2D(tDiffuse,distortedUV);gl_FragColor=texel;}"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":16},"properties":{"name":"strength"},"keyframes":[{"value":14.00}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1.5},"properties":{"name":"scale"},"keyframes":[{"value":1}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0},"properties":{"name":"time"},"keyframes":[{"value":0}]}]}],"baseType":"effect"}]');
	});

	// Stroke
	document.getElementById("stroke").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Stroke","fragShader":"precision highp float;uniform sampler2D tDiffuse;varying vec2 vUvScaled;uniform float width;uniform float hue;uniform vec3 rgb;vec3 rgb2hsv(vec3 c){vec4 K=vec4(0.0,-1.0/3.0,2.0/3.0,-1.0);vec4 p=mix(vec4(c.bg,K.wz),vec4(c.gb,K.xy),step(c.b,c.g));vec4 q=mix(vec4(p.xyw,c.r),vec4(c.r,p.yzx),step(p.x,c.r));float d=q.x-min(q.w,q.y);float e=1.0e-10;return vec3(abs(q.z+(q.w-q.y)/(6.0*d+e)),d/(q.x+e),q.x);}vec3 hsv2rgb(vec3 c){vec4 K=vec4(1.0,2.0/3.0,1.0/3.0,3.0);vec3 p=abs(fract(c.xxx+K.xyz)*6.0-K.www);return c.z*mix(K.xxx,clamp(p-K.xxx,0.0,1.0),c.y);}void main(){vec4 texel=texture2D(tDiffuse,vUvScaled);if(texel.a!=1.0&&width>0.0){float width180=width/180.0;float width90=width/90.0;for(int i=0;i<360;i+=1){float angle=radians(float(i));vec2 offset=vec2(cos(angle)*width180,sin(angle)*width90);vec2 newUV=vUvScaled+offset;if(texture2D(tDiffuse,newUV).a!=0.0){vec3 hsv=rgb2hsv(rgb);hsv.x+=hue;vec3 newColor=hsv2rgb(hsv);gl_FragColor=vec4(newColor,1.0);return;}}}gl_FragColor=texel;}"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":16},"properties":{"name":"width"},"keyframes":[{"value":0.20}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0},"properties":{"name":"hue"},"keyframes":[{"value":0}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":0}]},{"keyframes":[{"value":0}]},{"keyframes":[{"value":0}]}]}]}],"baseType":"effect"}]');
	});

	// Turbidity
	document.getElementById("turbidity").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Turbidity","fragShader":"precision highp float;uniform sampler2D tDiffuse;varying vec2 vUvScaled;uniform float strength;uniform float rotation;uniform vec2 direction;void main(){vec4 texel=vec4(0.0);for(float i=-1.0;i<=1.0;i+=1.0){for(float j=-1.0;j<=1.0;j+=1.0){vec2 offset=vec2(i,j)*strength;vec2 rotatedOffset=vec2(offset.x*cos(rotation)-offset.y*sin(rotation),offset.x*sin(rotation)+offset.y*cos(rotation));vec2 scaledOffset=rotatedOffset*direction/10.0;texel+=texture2D(tDiffuse,vUvScaled+scaledOffset);}}gl_FragColor=texel/9.0;}"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":5},"properties":{"name":"strength"},"keyframes":[{"value":2}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0},"properties":{"name":"rotation"},"keyframes":[{"value":45}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"x","type":0,"min":-1,"max":1},{"dynamic":true,"name":"y","type":0,"min":-1,"max":1}],"type":1,"min":-1,"max":1},"properties":{"name":"direction"},"objects":[{"keyframes":[{"value":0}]},{"keyframes":[{"value":0.50}]}]}]}],"baseType":"effect"}]');
	});

	// Vignette
	document.getElementById("vignette").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Vignette","fragShader":"precision highp float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform vec2 center; uniform float smoothness; uniform float size; uniform vec3 rgb; void main(){ vec4 color = texture2D(tDiffuse, vUv); float distance = distance(center, vUv); float maxDistance = length(center) * size; float intensity = smoothstep(maxDistance * (1.0 - smoothness), maxDistance, distance); float invertedIntensity = 1.0 - intensity; vec3 texel = mix(rgb, color.rgb, invertedIntensity); gl_FragColor = vec4(texel, color.a); }"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":5},"properties":{"name":"size"},"keyframes":[{"value":3.5}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0.01,"max":3},"properties":{"name":"smoothness"},"keyframes":[{"value":1}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"x","type":0,"min":-1,"max":1},{"dynamic":true,"name":"y","type":0,"min":-1,"max":1}],"type":1,"min":-1,"max":1},"properties":{"name":"center"},"objects":[{"keyframes":[{"value":0.5}]},{"keyframes":[{"value":0.5}]}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":0}]},{"keyframes":[{"value":0}]},{"keyframes":[{"value":0}]}]}]}],"baseType":"effect"}]');
	});

	// Warp waves
	document.getElementById("warpWaves").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Warp waves","fragShader":"precision highp float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform float strength; uniform float twist; uniform float time; void main(){ vec2 offset = vec2(sin(vUv.y * twist + time), sin(vUv.x * twist + time)); vec2 distortedUV = vUv + offset * strength / 5.0; vec4 texel = texture2D(tDiffuse, distortedUV); gl_FragColor = texel; }"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"strength"},"keyframes":[{"value":0.20}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0.25,"max":3},"properties":{"name":"twist"},"keyframes":[{"value":1.20}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0},"properties":{"name":"time"},"keyframes":[{"value":0}]}]}],"baseType":"effect"}]');
	});

	// Ghost
	document.getElementById("ghost").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Ghost","fragShader":"precision highp float;uniform sampler2D tDiffuse;varying vec2 vUv;uniform float scale;uniform float intensity;uniform vec2 position;uniform vec3 tint;void main(){vec2 offset=vUv-position;float distance=length(offset);vec2 direction=normalize(offset);vec2 extrudeUV=position+direction*distance*(1.0-scale);if(extrudeUV.x<0.0||extrudeUV.x>1.0||extrudeUV.y<0.0||extrudeUV.y>1.0){discard;}vec4 color=texture2D(tDiffuse,vUv);vec4 extrudeColor=texture2D(tDiffuse,extrudeUV);vec4 texel=mix(color,extrudeColor,intensity);texel.rgb+=tint;gl_FragColor=texel;}"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"scale"},"keyframes":[{"value":0.40}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"intensity"},"keyframes":[{"value":0.20}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"x","type":0,"min":-3,"max":3},{"dynamic":true,"name":"y","type":0,"min":-3,"max":3}],"type":1,"min":-3,"max":3},"properties":{"name":"position"},"objects":[{"keyframes":[{"value":0.50}]},{"keyframes":[{"value":0.50}]}]}]}],"baseType":"effect"}]');
	});

	// Color expansion
	document.getElementById("colorExpansion").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Color expansion","fragShader":"precision highp float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform float strength; void main(){ vec4 color = texture2D(tDiffuse, vUv); vec3 texel = color.rgb * (1.0 + strength); texel = clamp(texel , 0.0, 1.0); gl_FragColor = vec4(texel, color.a); }"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":2},"properties":{"name":"strength"},"keyframes":[{"value":0.20}]}]}],"baseType":"effect"}]');
	});

	// Tint
	document.getElementById("tint").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Tint","fragShader":"precision mediump float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform vec3 rgb; uniform float strength; void main(){ vec4 texel = texture2D(tDiffuse, vUv); vec3 tintedColor = mix(texel.rgb, texel.rgb * rgb, strength); gl_FragColor = vec4(tintedColor, texel.a); }"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"strength"},"keyframes":[{"value":1}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]}]}]}],"baseType":"effect"}]');
	});

	// Toon
	document.getElementById("toon").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Toon","fragShader":"precision highp float;uniform sampler2D tDiffuse;varying vec2 vUv;uniform vec3 strength;uniform vec3 rgb;void main(){vec4 texel = texture2D(tDiffuse, vUv);vec3 color = texel.rgb;float intensity = (color.r + color.g + color.b) / 3.0;vec3 tint = mix(vec3(0.0), vec3(0.2), step(strength.x, intensity));float step2 = step(strength.y, intensity);tint = mix(tint, vec3(0.6), step2);tint = mix(tint, vec3(1.0), step(strength.z, intensity));color = mix(tint, rgb, 0.5);gl_FragColor = vec4(color, texel.a);}"},"customProperties":[{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"x","type":0,"min":0,"max":1},{"dynamic":true,"name":"y","type":0,"min":0,"max":1},{"dynamic":true,"name":"z","type":0,"min":0,"max":1}],"type":2,"min":0,"max":1},"properties":{"name":"strength"},"objects":[{"keyframes":[{"value":0.25}]},{"keyframes":[{"value":0.40}]},{"keyframes":[{"value":1}]}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]}]}]}],"baseType":"effect"}]');
	});

	// Mirror
	document.getElementById("mirror").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Mirror","fragShader":"precision highp float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform float segments; const float pi = 3.14159265358979323846264; const float two_pi = 2.0 * pi; void main(){ vec2 p = vUv - 0.5; float angle = atan(p.y, p.x); float radius = length(p); float segmentAngle = two_pi / segments; float adjustedAngle = angle + pi; float segmentId = floor(adjustedAngle / segmentAngle); float newAngle = mod(adjustedAngle, segmentAngle) - 0.5 * segmentAngle; vec2 newP = vec2(cos(newAngle), sin(newAngle)) * radius; vec2 newUV = newP + 0.5; vec4 texel = texture2D(tDiffuse, newUV); gl_FragColor = texel; }"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":1,"max":16},"properties":{"name":"segments"},"keyframes":[{"value":3}]}]}],"baseType":"effect"}]');
	});

	// Cartoon
	document.getElementById("cartoon").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Cartoon","fragShader":"precision highp float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform float strength; uniform vec3 rgb; void main(){ vec4 texel = texture2D(tDiffuse, vUv); vec4 prevTexel = texture2D(tDiffuse, vUv - vec2(1.0 / 512.0, 0.0)); vec4 nextTexel = texture2D(tDiffuse, vUv + vec2(1.0 / 512.0, 0.0)); float prevDist = distance(texel.rgb, prevTexel.rgb); float nextDist = distance(texel.rgb, nextTexel.rgb); float contour = smoothstep(0.1, 1.0 - strength, max(prevDist, nextDist)); vec3 finalColor = mix(texel.rgb, vec3(rgb), contour); gl_FragColor = vec4(finalColor, 1.0); }"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"strength"},"keyframes":[{"value":0.70}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":0}]},{"keyframes":[{"value":0}]},{"keyframes":[{"value":0}]}]}]}],"baseType":"effect"}]');
	});

	// Inside shadow
	document.getElementById("innerShadow").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Inner shadow","fragShader":"precision highp float; uniform sampler2D tDiffuse; varying vec2 vUvScaled; uniform vec2 offset; uniform vec3 rgb; void main(){ vec4 texel = texture2D(tDiffuse, vUvScaled); vec2 offsetUv = vUvScaled + (offset * -0.1); vec4 offsetTexel = texture2D(tDiffuse, offsetUv); gl_FragColor = (texel.a == 1.0 && offsetTexel.a == 0.0) ? vec4(rgb, 1.0) : texel; }"},"customProperties":[{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"x","type":0,"min":-1,"max":1},{"dynamic":true,"name":"y","type":0,"min":-1,"max":1}],"type":1,"min":-1,"max":1},"properties":{"name":"offset"},"objects":[{"keyframes":[{"value":0.05}]},{"keyframes":[{"value":-0.05}]}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]}]}]}],"baseType":"effect"}]');
	});

	// Shine
	document.getElementById("shine").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Shine","fragShader":"precision highp float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform float strength; uniform vec2 center; uniform float thickness; void main(){ vec4 color = vec4(0.0); for (int i = 0; i < 1080; i++){ float t = float(i) * 1.0 / 1080.0; t = t * t; float step = t * strength; vec2 offset = (center - vUv) * step; color += texture2D(tDiffuse, vUv + offset); } color *= thickness / 1080.0; gl_FragColor = color; }"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"strength"},"keyframes":[{"value":0.40}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"x","type":0,"min":-1,"max":1},{"dynamic":true,"name":"y","type":0,"min":-1,"max":1}],"type":1,"min":-1,"max":1},"properties":{"name":"center"},"objects":[{"keyframes":[{"value":0.50}]},{"keyframes":[{"value":0.50}]}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":2},"properties":{"name":"thickness"},"keyframes":[{"value":1}]}]}],"baseType":"effect"}]');
	});

	// Motion blur
	document.getElementById("motionBlur").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Motion blur","fragShader":"precision highp float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform float strength; uniform vec2 direction; uniform float thickness; void main() { vec4 texel = vec4(0.0); for (int i = 0; i < 512; ++i) { float offset = float(i - 512 / 2) * strength / float(100); texel += texture2D(tDiffuse, vUv + direction / float(100) * offset); } gl_FragColor = texel / float(512) / thickness; }"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":32},"properties":{"name":"strength"},"keyframes":[{"value":2}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"x","type":0,"min":-1,"max":1},{"dynamic":true,"name":"y","type":0,"min":-1,"max":1}],"type":1,"min":-1,"max":1},"properties":{"name":"direction"},"objects":[{"keyframes":[{"value":0}]},{"keyframes":[{"value":0.5}]}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":2},"properties":{"name":"thickness"},"keyframes":[{"value":0.9}]}]}],"baseType":"effect"}]');
	});

	// Colorisma
	document.getElementById("colorisma").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Colorisma","fragShader":"precision highp float;uniform sampler2D tDiffuse;varying vec2 vUvScaled;uniform float strength;uniform vec3 tint;uniform float gamma;uniform float brightness;uniform float contrast;uniform float saturation;uniform float hue;uniform float sharpness;uniform float exposure;uniform float midExposure;uniform float sideExposure;vec3 applyBrightness(vec3 color, float value) { return color + value; }vec3 applyTint(vec3 color, vec3 tint) { return color * tint; }vec3 applyContrast(vec3 color, float amount) { return (color - 0.5) * amount + 0.5; }vec3 applySaturation(vec3 color, float amount) { float luminance = dot(color, vec3(0.2126, 0.7152, 0.0722)); return mix(vec3(luminance), color, amount); }vec3 applyExposure(vec3 color, float amount) { return color + amount * color * color; }vec3 applySharpness(vec3 color, float amount) { vec3 blurredColor = texture2D(tDiffuse, vUvScaled + vec2(-0.001, 0.0)).rgb; blurredColor += texture2D(tDiffuse, vUvScaled + vec2(-0.001, 0.0)).rgb; blurredColor += texture2D(tDiffuse, vUvScaled + vec2(0.0, -0.001)).rgb; blurredColor += texture2D(tDiffuse, vUvScaled + vec2(0.0, -0.001)).rgb; blurredColor -= 4.0 * color; return color + blurredColor * -amount; }vec3 rgb2hsv(vec3 c) { vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0); vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g)); vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r)); float d = q.x - min(q.w, q.y); float e = 1.0e-10; return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x); }vec3 hsv2rgb(vec3 c) { vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0); vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www); return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y); }vec3 applyHue(vec3 color, float adjustment) { vec3 hsv = rgb2hsv(color); hsv.x = mod(hsv.x + adjustment, 1.0); return hsv2rgb(hsv); }  void main() { vec4 texel = texture2D(tDiffuse, vUvScaled); vec3 filteredColor = texel.rgb;filteredColor = applyBrightness(filteredColor, brightness);filteredColor = applyTint(filteredColor, tint);filteredColor = applyContrast(filteredColor, contrast);filteredColor = applySaturation(filteredColor, saturation);filteredColor = applyExposure(filteredColor, exposure);filteredColor = applyHue(filteredColor, hue / 8.0);filteredColor = pow(filteredColor, vec3(1.0 / gamma));float exposureValue = mix(midExposure, sideExposure, abs(vUvScaled.x - 0.5) * 2.0);filteredColor *= exposureValue;filteredColor = applySharpness(filteredColor, sharpness);vec3 finalColor = mix(texel.rgb, filteredColor, strength);gl_FragColor = vec4(finalColor, texel.a); }"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":2},"properties":{"name":"strength"},"keyframes":[{"value":1}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"tint"},"objects":[{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":2},"properties":{"name":"gamma"},"keyframes":[{"value":1}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":-1,"max":1},"properties":{"name":"brightness"},"keyframes":[{"value":0}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":2},"properties":{"name":"contrast"},"keyframes":[{"value":1}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":6},"properties":{"name":"saturation"},"keyframes":[{"value":1}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"sharpness"},"keyframes":[{"value":0}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0},"properties":{"name":"hue"},"keyframes":[{"value":0}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":-3,"max":3},"properties":{"name":"exposure"},"keyframes":[{"value":0}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":1,"max":3},"properties":{"name":"midExposure"},"keyframes":[{"value":1}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":1,"max":3},"properties":{"name":"sideExposure"},"keyframes":[{"value":1}]}]}],"baseType":"effect"}]');
	});

	// Edge Blur
	document.getElementById("edgeBlur").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Edge blur","fragShader":"precision mediump float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform vec2 center; uniform float strength; uniform float scale; void main() { vec4 sum = vec4(0.0); float distanceToCenter = distance(vUv, center); float blurIntensity = mix(0.0, strength * 3.0, smoothstep(0.0, scale * 12.0, distanceToCenter)); for (int i = 0; i < 128; i++) { float angle = float(i) * (3.14 * 2.0) / float(128.0); vec2 offset = blurIntensity * vec2(cos(angle), sin(angle)); sum += texture2D(tDiffuse, vUv + offset); } gl_FragColor = sum / float(128); }"},"customProperties":[{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"x","type":0,"min":-1,"max":1},{"dynamic":true,"name":"y","type":0,"min":-1,"max":1}],"type":1,"min":-1,"max":1},"properties":{"name":"center"},"objects":[{"keyframes":[{"value":0.5}]},{"keyframes":[{"value":0.5}]}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":4},"properties":{"name":"strength"},"keyframes":[{"value":1.5}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":1,"max":4},"properties":{"name":"scale"},"keyframes":[{"value":2}]}]}],"baseType":"effect"}]');
	});

    // Glitch
	document.getElementById("glitch").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Glitch","fragShader":"precision highp float;uniform sampler2D tDiffuse;varying vec2 vUv;uniform float strength;uniform float scanline;uniform float pixelation;uniform float noise;uniform float inversion;float random(vec2 st){return fract(sin(dot(st.xy, vec2(1, 100))) * 5000.0);}void main(){vec4 color = texture2D(tDiffuse, vUv);float pixelSize = 0.005 * pixelation;vec2 uvPixelated = floor(vUv / pixelSize) * pixelSize;vec4 pixelColor = texture2D(tDiffuse, uvPixelated);float glitchFactor = sin(vUv.y * 100.0) * scanline * 0.02;vec2 uvGlitch = vec2(fract(vUv.x + glitchFactor), vUv.y);vec4 glitchColor = texture2D(tDiffuse, uvGlitch);vec4 texel = mix(color, pixelColor, mix(1.0, scanline * 12.0, strength));texel.rgb = mix(texel.rgb, glitchColor.rgb, mix(1.0, scanline * 0.5, strength));float noiseValue = (random(vUv) - 0.5) * noise * 2.0;vec4 noiseColor = vec4(vec3(noiseValue), 1.0);texel.rgb += mix(vec3(0.0), noiseColor.rgb, strength);texel.rgb = mix(texel.rgb, 1.0 - texel.rgb, inversion * strength);gl_FragColor = mix(color, texel, strength);}"}, "customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"strength"},"keyframes":[{"value":1}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":-12,"max":12},"properties":{"name":"scanline"},"keyframes":[{"value":12}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":1,"max":16},"properties":{"name":"pixelation"},"keyframes":[{"value":2}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":12},"properties":{"name":"noise"},"keyframes":[{"value":2}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"inversion"},"keyframes":[{"value":0}]}]}],"baseType":"effect"}]');
	});

	// Leave color
	document.getElementById("leaveColor").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Leave color","fragShader":"precision highp float; uniform sampler2D tDiffuse; varying vec2 vUv; uniform vec3 rgb; void main(){ vec4 texel = texture2D(tDiffuse, vUv); float colorDistance = distance(texel.rgb, rgb); vec3 desaturatedColor = mix(texel.rgb, vec3(dot(texel.rgb, vec3(0.212, 0.715, 0.072))), smoothstep(0.65, 0.5, colorDistance)); gl_FragColor = vec4(desaturatedColor, texel.a); }"},"customProperties":[{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]}]}]}],"baseType":"effect"}]');
	});

	// Halftone
	document.getElementById("halftone").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Halftone","fragShader":"precision mediump float;uniform sampler2D tDiffuse;varying vec2 vUv;uniform float strength;uniform float scale;uniform vec3 rgb;void main(){float size=scale/0.01;vec2 round=vec2(floor(vUv.x*size)/size,floor(vUv.y*size)/size);vec2 center=round+vec2(0.5/size);float distance=length(vUv-center);if(distance<strength/(size*1.0))gl_FragColor=texture2D(tDiffuse,round)*vec4(rgb,1.0);else gl_FragColor=vec4(0.0);}"}, "customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"strength"},"keyframes":[{"value":0.5}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"scale"},"keyframes":[{"value":1}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]}]}]}],"baseType":"effect"}]');
	});

	// Invert channel
	document.getElementById("invertChannel").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Invert channel","fragShader":"precision highp float;uniform sampler2D tDiffuse;varying vec2 vUv;uniform float strength;uniform vec3 rgb;void main(){vec4 texel=texture2D(tDiffuse,vUv);float distance=distance(texel.rgb,rgb);vec3 inverted=mix(texel.rgb,1.0-texel.rgb,smoothstep(strength,strength-0.5,distance));gl_FragColor=vec4(inverted,texel.a);}"},"customProperties":[{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":1},"properties":{"name":"strength"},"keyframes":[{"value":1}]},{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]}]}]}],"baseType":"effect"}]');
	});

	// Extrude
	document.getElementById("extrude").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":1,"properties":{"name":"Extrude","fragShader":"precision highp float; precision highp int; uniform sampler2D tDiffuse; varying vec2 vUvScaled; uniform vec3 rgb; uniform float angle; uniform float back; uniform float front; void main() { vec4 finalColor = vec4(0.0); float extrude = back * 0.1; for (int i = 0; i < 4080; i++) { vec2 offset = vec2(cos(angle / 6.0) * extrude, sin(angle / 6.0) * extrude); vec2 uv = vUvScaled + offset; if (uv.x >= 0.0 && uv.x <= 1.0 && uv.y >= 0.0 && uv.y <= 1.0) { vec4 displacedTexel = texture2D(tDiffuse, uv); finalColor = mix(finalColor, displacedTexel, displacedTexel.a); } extrude = min(extrude + 0.00025, front * 0.1); } finalColor.rgb *= rgb; gl_FragColor = finalColor; }"},"customProperties":[{"type":{"custom":true,"group":true,"dynamic":true,"objects":[{"dynamic":true,"name":"r","type":0,"min":0,"max":1},{"dynamic":true,"name":"g","type":0,"min":0,"max":1},{"dynamic":true,"name":"b","type":0,"min":0,"max":1}],"type":4},"properties":{"name":"rgb"},"objects":[{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]},{"keyframes":[{"value":1}]}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0},"properties":{"name":"angle"},"keyframes":[{"value":14}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":-8.0,"max":0},"properties":{"name":"back"},"keyframes":[{"value":-0.15}]},{"type":{"custom":true,"dynamic":true,"type":0,"min":0,"max":8.0},"properties":{"name":"front"},"keyframes":[{"value":0.2}]}]}],"baseType":"effect"}]');
	});

	// Wiggle shake
	document.getElementById("wiggleShake").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":"shake","properties":{"name":"Wiggle shake","enabled":{"animated":false,"keyframes":[{"value":1,"frame":0,"tween":0,"controlPoints":[[-10,0],[10,0]]}]},"amplitude":{"animated":true,"keyframes":[{"value":0,"frame":36,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":0.02,"frame":37,"tween":2,"controlPoints":[[-10,0],[10,0]]}]},"speed":{"animated":false,"keyframes":[{"value":2.7,"frame":0,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"zoom":{"animated":true,"keyframes":[{"value":0,"frame":36,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":350,"frame":37,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"wrap":2,"shake":{"mode":0,"amplitude":[5,5,2500,16],"frequency":[0.75,1.45,2,4],"phase":[1,15,15,30],"noise":[0.9,0.9,0.9,0.55],"smooth":[1,1,1,1]}}}],"baseType":"effect","assets":[]}]');
	});

	// Small shake
	document.getElementById("smallShake").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":"shake","properties":{"name":"Small shake","enabled":{"animated":false,"keyframes":[{"value":1,"frame":0,"tween":0,"controlPoints":[[-10,0],[10,0]]}]},"amplitude":{"animated":true,"keyframes":[{"value":0,"frame":35,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":0.025,"frame":36,"tween":0,"controlPoints":[[-10,0],[10,0]]}]},"speed":{"animated":false,"keyframes":[{"value":2.7,"frame":0,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"zoom":{"animated":true,"keyframes":[{"value":0,"frame":35,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":200,"frame":36,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"wrap":2,"shake":{"mode":0,"amplitude":[4,4,200,4],"frequency":[0.9,1.45,2,2],"phase":[2,11,7,31],"noise":[0.9,0.9,0.9,0.55],"smooth":[1,1,1,1]}}}],"baseType":"effect","assets":[]}]');
	});

	// Zoom shake
	document.getElementById("zoomShake").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":"shake","properties":{"name":"Zoom shake","enabled":{"animated":false,"keyframes":[{"value":1,"frame":0,"tween":0,"controlPoints":[[-10,0],[10,0]]}]},"amplitude":{"animated":true,"keyframes":[{"value":0,"frame":37,"tween":3,"controlPoints":[[-10,0],[10,0]]},{"value":0.01,"frame":38,"tween":0,"controlPoints":[[-10,0],[10,0]]}]},"speed":{"animated":false,"keyframes":[{"value":5,"frame":0,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"zoom":{"animated":true,"keyframes":[{"value":0,"frame":20,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":600,"frame":37,"tween":20,"controlPoints":[[-10,0],[10,0]]},{"value":0,"frame":56,"tween":3,"controlPoints":[[-10,0],[10,0]]}]},"wrap":2,"shake":{"mode":0,"amplitude":[16,16,6800,30],"frequency":[0.6,0.8,1,1.5],"phase":[0,11,20,31],"noise":[0.9,0.9,0.9,0.55],"smooth":[1,1,1,1]}}}],"baseType":"effect","assets":[]}]');
	});

	// Sharp shake
	document.getElementById("sharpShake").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":"shake","properties":{"name":"Sharp shake","enabled":{"animated":false,"keyframes":[{"value":1,"frame":0,"tween":0,"controlPoints":[[-10,0],[10,0]]}]},"amplitude":{"animated":true,"keyframes":[{"value":0,"frame":37,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":0.025,"frame":38,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"speed":{"animated":false,"keyframes":[{"value":7,"frame":0,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"zoom":{"animated":true,"keyframes":[{"value":100,"frame":37,"tween":3,"controlPoints":[[-10,0],[10,0]]},{"value":600,"frame":38,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"wrap":2,"shake":{"mode":0,"amplitude":[6,6,4500,30],"frequency":[0.3,0.7,1.1,0.6],"phase":[0,11,20,31],"noise":[0.9,0.9,0.9,0.55],"smooth":[1,1,1,1]}}}],"baseType":"effect","assets":[]}]');
	})

	// Rainbow shake
	document.getElementById("rainbowShake").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":"shake","properties":{"name":"Rainbow shake","enabled":{"animated":false,"keyframes":[{"value":1,"frame":0,"tween":0,"controlPoints":[[-10,0],[10,0]]}]},"amplitude":{"animated":true,"keyframes":[{"value":0,"frame":37,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":0.025,"frame":38,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":0.025,"frame":80,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":0,"frame":81,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"speed":{"animated":false,"keyframes":[{"value":15,"frame":0,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"zoom":{"animated":false,"keyframes":[{"value":100,"frame":0,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"wrap":2,"shake":{"mode":0,"amplitude":[0,0,0,22],"frequency":[0.6,0.8,0.7,1.2],"phase":[0,11,20,31],"noise":[0.9,0.9,0.9,0.55],"smooth":[1,1,1,1]}}}],"baseType":"effect","assets":[]}]');
	})

	// Left right shake
	document.getElementById("leftRightShake").addEventListener("click", function() {
		СopyToClipboard('[{"data":[{"type":"shake","properties":{"name":"Left right shake","enabled":{"animated":false,"keyframes":[{"value":1,"frame":0,"tween":0,"controlPoints":[[-10,0],[10,0]]}]},"amplitude":{"animated":true,"keyframes":[{"value":0,"frame":37,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":0.015,"frame":43,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":0.015,"frame":78,"tween":1,"controlPoints":[[-10,0],[10,0]]},{"value":0,"frame":85,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"speed":{"animated":false,"keyframes":[{"value":15,"frame":0,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"zoom":{"animated":false,"keyframes":[{"value":100,"frame":0,"tween":1,"controlPoints":[[-10,0],[10,0]]}]},"wrap":2,"shake":{"mode":0,"amplitude":[0,60,0,0],"frequency":[0.6,0.2,0.7,0.9],"phase":[0,11,20,31],"noise":[0.9,0.9,0.9,0.55],"smooth":[1,1,1,1]}}}],"baseType":"effect","assets":[]}]');
	})
});